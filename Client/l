server written in Java which will facilitate the syncronization of data from
selected network shares to departmental  Box.com accounts which we're using for remote storage. Server listens on tcp port 10k, java client connects via tcp, sends a string LOGIN:username:password:auth_code where auth_code is a unique code associated with their box accounts.. server validates creds against our active directory server and if they're correct it generates a random token and saves it, along with their auth_code and username in an sqlite DB, and then returns to the client via tcp their token...on all subsequent requests my client will pass a string token:<command> like token:mount:share_name or token:sync:share:box_directory. my little server is multi-threaded so everytime a client connects, it dumps the info associated with the socket into a thread pool and waits for another client, so people can connect on laptops, request backups, and have my app schedule them 
